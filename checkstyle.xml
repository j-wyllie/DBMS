<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--
    checkstyle xml created based on:
        https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml
        https://github.com/skeeto/sample-java-project/blob/master/checkstyle.xml
-->

<module name="Checker">
    <property name="charset" value="UTF-8"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">
        <!-- Blocks                                               -->
        <!-- http://checkstyle.sourceforge.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <!--<module name="EmptyBlock"/>-->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Class design                                -->
        <!-- http://checkstyle.sf.net/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount"/>
        <!--<module name="VisibilityModifier"/>-->

        <!-- Coding                                      -->
        <!-- http://checkstyle.sf.net/config_coding.html -->
        <module name="ArrayTrailingComma"/>
        <module name="CovariantEquals"/>
        <!--<module name="DeclarationOrder"/>-->
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <!--<module name="EqualsAvoidNull"/>-->
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <!--<module name="IllegalCatch">-->
            <!--<property name="illegalClassNames"-->
                <!--value="java.lang.Exception,-->
                         <!--java.lang.Throwable,-->
                         <!--java.lang.RuntimeException,-->
                         <!--java.lang.NullPointerException"/>-->
        <!--</module>-->
        <module name="IllegalInstantiation">
            <property name="classes"
                value="org.xml.sax.SAXException, org.xml.sax.SAXParseException,
                         org.apache.commons.beanutils.ConversionException,
                         org.antlr.v4.runtime.misc.ParseCancellationException,
                         antlr.RecognitionException, antlr.TokenStreamException,
                         antlr.TokenStreamRecognitionException, antlr.ANTLRException"/>
        </module>
        <module name="IllegalThrows"/>
        <module name="IllegalToken">
            <property name="tokens" value="LABELED_STAT"/>
            <property name="tokens" value="LITERAL_NATIVE"/>
            <property name="tokens" value="LITERAL_VOLATILE"/>
            <property name="tokens" value="LITERAL_ASSERT"/>
        </module>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL"/>
            <property name="format" value="^(US-ASCII|ISO-8859-1|UTF-8|UTF-16BE|UTF-16LE|UTF-16)$"/>
            <property name="ignoreCase" value="true"/>
        </module>
        <module name="IllegalType"/>
        <module name="InnerAssignment"/>
        <!--<module name="MagicNumber"/>-->
        <!--<module name="MissingSwitchDefault"/>-->
        <module name="ModifiedControlVariable"/>
        <!--<module name="MultipleStringLiterals"/>-->
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="RequireThis"/>
        <module name="SimplifyBooleanExpression"/>
        <!--<module name="SimplifyBooleanReturn"/>-->
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessaryParentheses"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--<module name="JavadocMethod">-->
            <!--<property name="ignoreMethodNamesRegex" value="^(get|set).*$"/>-->
        <!--</module>-->
        <!--<module name="JavadocType"/>-->
        <!--<module name="JavadocStyle"/>-->

        <!-- Whitespace: http://checkstyle.sourceforge.net/config_whitespace.html -->
        <module name="NoWhitespaceAfter"/>

    </module>

</module>
