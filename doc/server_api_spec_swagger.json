{
  "openapi": "3.0.0",
  "info": {
    "description": "ODMS API",
    "version": "1.0",
    "title": "Human Farm",
    "contact": {
      "name": "Human Farm",
      "email": "s302team200@cosc.canterbury.ac.nz"
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Functionality related to clinician/admin accounts"
    },
    {
      "name": "profiles",
      "description": "Functionality related to donor/receiver accounts"
    },
    {
      "name": "countries",
      "description": "Functionality related to countries"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get select users from the database",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Username of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Edits the basic attributes of a given user.",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "description": "Id of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a given user.",
        "parameters": [
          {
            "in": "query",
            "name": "user Id",
            "description": "Id of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Get select profiles from the database",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "Username of the profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "description": "Id of the profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "receiving",
            "description": "True if you only want receivers.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProfile"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Creates a new profile (donor or receiver)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postProfile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "Edits the basic attributes of a given profile.",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "description": "Id of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "profiles"
        ],
        "summary": "Deletes a given profile.",
        "parameters": [
          {
            "in": "query",
            "name": "profile Id",
            "required": true,
            "description": "Id of the profile",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/profiles/count": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Get the number of profiles in the database",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProfileCount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/profiles/{id}/conditions": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Gets all conditions of a profile.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCondition"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Adds a condition to a profile.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "Changes the details of a condition for a profile.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "profiles"
        ],
        "summary": "Deletes a condition from a profile.",
        "parameters": [
          {
            "in": "query",
            "name": "conditionId",
            "required": true,
            "description": "Id of the condition",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Id of the user.",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ]
    },
    "/profiles/{id}/drugs": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Get current and past drugs for a profile",
        "parameters": [
          {
            "in": "query",
            "name": "current",
            "required": false,
            "description": "Optional parameter to define whether to get current or past drugs",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Add a drug to a profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "Update a drug",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/drug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "profiles"
        ],
        "summary": "Delete a drug from a profile",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "ID of the drug to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Id of the user.",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ]
    },
    "/profiles/{id}/organs": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Get organs that are associated with a profile",
        "parameters": [
          {
            "in": "query",
            "name": "donated",
            "description": "if the organ has been donated",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "donating",
            "description": "if the organ is to be donated",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "required",
            "description": "if the organ is a required organ",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "received",
            "description": "if the organ has been received",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Add an organ to the profile",
        "parameters": [
          {
            "in": "query",
            "name": "donated",
            "description": "if the organ has been donated",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "donating",
            "description": "if the organ is to be donated",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "required",
            "description": "if the organ is a required organ",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "received",
            "description": "if the organ has been received",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organ"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Id of the user.",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ]
    },
    "/profile/{id}/procedure": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Gets all the procedures for a profile.",
        "parameters": [
          {
            "in": "query",
            "name": "pending",
            "description": "True to only get pending procedures, false for all procedures.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProcedure"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Adds a procedure to a profile.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/procedure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "Updates a procedure.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/procedure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "profiles"
        ],
        "summary": "Deletes a procedure from a profile",
        "parameters": [
          {
            "in": "query",
            "name": "procedureId",
            "description": "Id of the procedure",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Id of the user.",
          "schema": {
            "$ref": "#/components/schemas/id"
          }
        }
      ]
    },
    "/countries": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "Gets all of the countries from the database",
        "parameters": [
          {
            "in": "query",
            "name": "valid",
            "description": "Optional parameter to define whether or not to return valid/invalid countries",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCountries"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "countries"
        ],
        "summary": "Updates a countries valid field",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchCountry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "postUser": {
        "type": "object",
        "required": [
          "username",
          "password",
          "name",
          "userType",
          "region"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "patchUser": {
        "type": "object",
        "required": [
          "username",
          "password",
          "name",
          "userType",
          "region"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "getUser": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "userType": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date"
            },
            "lastUpdated": {
              "type": "string",
              "format": "date"
            },
            "isDefault": {
              "type": "boolean"
            }
          }
        }
      },
      "postProfile": {
        "type": "object",
        "required": [
          "nhi",
          "username",
          "givenNames",
          "lastNames",
          "dob"
        ],
        "properties": {
          "nhi": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "isDonor": {
            "type": "boolean"
          },
          "isReceiver": {
            "type": "boolean"
          },
          "givenNames": {
            "type": "string"
          },
          "lastNames": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "dod": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "height": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "bloodType": {
            "type": "string"
          },
          "isSmoker": {
            "type": "boolean"
          },
          "alcoholConsumption": {
            "type": "number"
          },
          "bloodPressureSystolic": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "streetNo": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "neighbourhood": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "integer"
          },
          "region": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "birthCountry": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "getProfile": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "nhi": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "isDonor": {
              "type": "boolean"
            },
            "isReceiver": {
              "type": "boolean"
            },
            "givenNames": {
              "type": "string"
            },
            "lastNames": {
              "type": "string"
            },
            "dob": {
              "type": "string"
            },
            "dod": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "height": {
              "type": "number"
            },
            "weight": {
              "type": "number"
            },
            "bloodType": {
              "type": "string"
            },
            "isSmoker": {
              "type": "boolean"
            },
            "alcoholConsumption": {
              "type": "number"
            },
            "bloodPressureSystolic": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "streetNo": {
              "type": "string"
            },
            "streetName": {
              "type": "string"
            },
            "neighbourhood": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "zipcode": {
              "type": "integer"
            },
            "region": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "birthCountry": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "created": {
              "type": "string"
            },
            "updated": {
              "type": "string"
            }
          }
        }
      },
      "patchProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nhi": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "isDonor": {
            "type": "boolean"
          },
          "isReceiver": {
            "type": "boolean"
          },
          "givenNames": {
            "type": "string"
          },
          "lastNames": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "dod": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "height": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "bloodType": {
            "type": "string"
          },
          "isSmoker": {
            "type": "boolean"
          },
          "alcoholConsumption": {
            "type": "number"
          },
          "bloodPressureSystolic": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "streetNo": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "neighbourhood": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "integer"
          },
          "region": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "birthCountry": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string"
          }
        }
      },
      "getCountries": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "valid": {
              "type": "boolean"
            }
          }
        }
      },
      "patchCountry": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "getCondition": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "description": {
              "type": "string"
            },
            "diagnosisDate": {
              "type": "string"
            },
            "chronic": {
              "type": "boolean"
            },
            "current": {
              "type": "boolean"
            },
            "past": {
              "type": "boolean"
            },
            "dateCured": {
              "type": "string"
            }
          }
        }
      },
      "addCondition": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "diagnosisDate": {
            "type": "string"
          },
          "chronic": {
            "type": "boolean"
          },
          "current": {
            "type": "boolean"
          },
          "past": {
            "type": "boolean"
          },
          "dateCured": {
            "type": "string"
          }
        }
      },
      "patchCondition": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "diagnosisDate": {
            "type": "string"
          },
          "chronic": {
            "type": "boolean"
          },
          "current": {
            "type": "boolean"
          },
          "past": {
            "type": "boolean"
          },
          "dateCured": {
            "type": "string"
          },
          "conditionId": {
            "type": "integer"
          }
        }
      },
      "procedure": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "procedureDate": {
            "type": "string"
          },
          "procedureId": {
            "type": "integer"
          }
        }
      },
      "getProcedure": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "summary": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "procedureDate": {
              "type": "string"
            },
            "procedureId": {
              "type": "integer"
            }
          }
        }
      },
      "drug": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "current": {
            "type": "boolean"
          },
          "past": {
            "type": "boolean"
          }
        }
      },
      "organ": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "getProfileCount": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "id": {
        "type": "integer",
        "description": "Profile Id"
      }
    }
  }
}